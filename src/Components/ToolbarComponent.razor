
<RgfToolbarComponent @ref="_rgfToolbarRef" EntityParameters="EntityParameters">
    <ToolbarTemplate Context="RgfToolbar">
        <div class="rz-paginator rz-unselectable-text rz-helper-clearfix">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Gap="6px" Wrap="FlexWrap.Wrap">
                @if (Manager.EntityDesc.Options.GetBoolValue("RGO_ClientMode") != true)
                {
                    <RadzenButton ButtonStyle="ButtonStyle.Light" title="@RecroDict.GetRgfUiString("Refresh")" Icon="refresh"
                                  Click="() => RgfToolbar.OnToolbarCommand(ToolbarAction.Refresh)" />

                    @if (Manager.EntityDesc.Options.GetBoolValue("RGO_NoFilter") != true)
                    {
                        <RadzenButton ButtonStyle="RgfToolbar.IsFiltered ? ButtonStyle.Info : ButtonStyle.Light" title="@RecroDict.GetRgfUiString("Filter")" Icon="filter_alt"
                                      Click="() => RgfToolbar.OnToolbarCommand(ToolbarAction.ShowFilter)" />
                    }
                }
                @if (Manager.EntityDesc.Options.GetBoolValue("RGO_NoDetails") != true)
                {
                    @if (RgfToolbar.BasePermissions.Add)
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Light" title="@RecroDict.GetRgfUiString("New")" Icon="add"
                                      Click="() => RgfToolbar.OnToolbarCommand(ToolbarAction.Add)" />
                    }
                    @if (RgfToolbar.BasePermissions.Edit)
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Light" title="@RecroDict.GetRgfUiString("Modify")" Icon="edit" Disabled="@(!RgfToolbar.IsSingleSelectedRow)"
                                      Click="() => RgfToolbar.OnToolbarCommand(ToolbarAction.Edit)" />
                    }
                    else if (RgfToolbar.BasePermissions.Read)
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Light" title="@RecroDict.GetRgfUiString("Details")" Icon="menu_book" Disabled="@(!RgfToolbar.IsSingleSelectedRow)"
                                      Click="() => RgfToolbar.OnToolbarCommand(ToolbarAction.Read)" />
                    }
                }
                @if (RgfToolbar.BasePermissions.Delete)
                {
                    <RadzenButton ButtonStyle="ButtonStyle.Light" title="@RecroDict.GetRgfUiString("Delete")" Icon="delete" Disabled="@(!RgfToolbar.IsSingleSelectedRow)"
                                  Click="() => RgfToolbar.OnDelete()" />
                }
                @if (RgfToolbar.SettingsMenu != null)
                {
                    <RadzenMenu>
                        <RadzenMenuItem title="@RecroDict.GetRgfUiString("Setup")" Icon="settings" class="rz-button rz-light">
                            @RgfToolbar.SettingsMenu
                        </RadzenMenuItem>
                    </RadzenMenu>
                }
                @if (RgfToolbar.SelectParam != null && Manager.EntityDesc.Options.GetBoolValue("RGO_SelectMode") == true)
                {
                    <RadzenButton ButtonStyle="ButtonStyle.Success" title="@RecroDict.GetRgfUiString("Select")" Icon="check" Disabled="@(!RgfToolbar.IsSingleSelectedRow)"
                                  Click="() => RgfToolbar.OnToolbarCommand(ToolbarAction.Select)" />
                }
            </RadzenStack>
        </div>
    </ToolbarTemplate>
</RgfToolbarComponent>

@code {

    [Parameter, EditorRequired]
    public RgfEntityParameters EntityParameters { get; set; } = null!;

    private IRgManager Manager => EntityParameters.Manager!;
    private RgfToolbarParameters ToolbarParameters { get => EntityParameters.ToolbarParameters; }
    private IRecroDictService RecroDict => Manager.RecroDict;

    private RgfToolbarComponent _rgfToolbarRef { get; set; } = null!;
}
